---
- name: "Generating Inventory Of Key To Be Rotated"
  hosts: localhost
  vars_files:
    - aws.vars
  vars:
    key_name: "ansible-test"
    key_tmp: "keypair-tmp"    
  tasks:
    
    # ---------------------------------------------------------------
    # Getting Information About Of Ec2's Which Need key To be Rotated
    # ---------------------------------------------------------------
    
    - name: "Fetching Detail About Ec2 Instance"
      ec2_instance_info:
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ secret_key }}"
        region: "us-east-2"
        filters:
          "key-name": "{{ key_name }}"
          instance-state-name: [ "running"]
      register: ec2
    
    
    # ------------------------------------------------------------
    # Creating Inventory Of Ec2  With Old Ssh-keyPair
    # ------------------------------------------------------------    
    - name: "Creating Inventory "
      add_host:
        name: "{{ item.public_ip_address }}"
        groups: "aws"
        ansible_host: "{{ item.public_ip_address }}"
        ansible_port: 22
        ansible_user: "ec2-user"
        ansible_ssh_private_key_file: "{{ key_name }}.pem"
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
      with_items:
        - "{{ ec2.instances }}"
      no_log: true     
             
            
            
        
- name: "Updating SshKey Meterial"
  hosts: aws
  become: true
  gather_facts: false
  vars_files:
    - aws.vars
  vars:
    key_name: "ansible-test"
    key_tmp: "keypair-tmp"
  tasks:
    
    - name: "Creating New Ssh-Kay Meterial"
      delegate_to: localhost
      run_once: True
      openssh_keypair:
        path: "{{ key_tmp }}"
        type: rsa
        size: 4096
        state: present
        
    - name: "Adding New SshKey Meterial"
      authorized_key:
       user: ec2-user
       state: present
       key: "{{ lookup('file', '{{ key_tmp }}.pub')  }}"
        
    - name: "Creating Ssh Connection Command"
      set_fact:
        ssh_connection: "ssh -o StrictHostKeyChecking=no -i {{ key_tmp }} {{ansible_ssh_user}}@{{ ansible_ssh_host }} 'uptime'" 

    - name: "Checking Connectivity To Ec2 Using Newly Added Key"
      ignore_errors: true
      delegate_to: localhost
      shell: "{{ ssh_connection }}" 
    
    - name: "Removing Old KeyMeterial"
      authorized_key:
       user: ec2-user
       state: present
       key: "{{ lookup('file', '{{ key_tmp }}.pub')  }}"
       exclusive: true
        
    - name: "Removing Old Ssh public From Aws Account "
      delegate_to: localhost
      run_once: True
      ec2_key:
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ secret_key }}"
        region: "{{ region }}"
        name: "{{ key_name }}"
        key_material: "{{ lookup('file', '{{ key_tmp }}.pub') }}"
        force: true
        state: present
            
    - name: "Renaming Local Pulbic Key"
      run_once: True
      delegate_to: localhost
      shell: "mv {{  key_tmp }}.pub  {{ key_name }}.pub"

    - name: "Renaming Local Private Key" 
      run_once: True
      delegate_to: localhost
      shell: "mv {{  key_tmp }}  {{ key_name }}.pem"
